apiVersion: v1
kind: Service
metadata:
  name: nginx
  labels:
    app: nginx
spec:
  ports:
    - port: 80
      name: web
  clusterIP: None # headless
  selector:
    app: nginx

---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: web
spec:
  selector:
    matchLabels:
      app: nginx # has to match .spec.template.metadata.labels
  serviceName: "nginx"
  replicas: 2 # by default is 1
  minReadySeconds: 10 # by default is 0
  template:
    metadata:
      labels:
        app: nginx # has to match .spec.selector.matchLabels
    spec:
      terminationGracePeriodSeconds: 10
      containers:
        - name: nginx
          image: nginx:1.23.3-alpine
          ports:
            - containerPort: 80
              name: web
          volumeMounts:
            - name: www
              mountPath: /usr/share/nginx/html

      volumes:
        - name: setup
          configMap:
            name: setup-nginx-files
            defaultMode: 0777

      initContainers:
        - name: init-2
          image: busybox
          command:
            [
              "sh",
              "-c",
              "echo [init-2] Inside init-2 start; sleep 2;echo [init-2] init-2 completed;",
            ]

        - name: init
          # image: busybox:latest
          image: bash:latest
          imagePullPolicy: "IfNotPresent"
          command: ["bash", "-c"]

          # args: ["echo $(ls -l /tmp); echo $(whoami); cd tmp && ./nginx_init.sh"]
          args:
            - |
              echo [init] /tmp content $(ls -l /tmp);
              echo [init] bash $(which bash)
              cd /tmp && bash ./nginx_init.sh;
              echo [init] /usr/share/nginx/html $(ls -l /usr/share/nginx/html);

          volumeMounts:
            - name: www
              mountPath: /usr/share/nginx/html
            - name: setup
              mountPath: /tmp
              # mountPath: /tmp/nginx_init.sh
              # subPath: nginx_init.sh
              readOnly: true

  volumeClaimTemplates:
    - metadata:
        name: www
        # annotations:
        #   volume.beta.kubernetes.io/storage-class: hcloud-volumes
        annotations:
          volume.beta.kubernetes.io/storage-class: standard
      spec:
        accessModes: ["ReadWriteOnce"]
        resources:
          requests:
            storage: 256Mi
