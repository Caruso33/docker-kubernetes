## First start

git clone https://github.com/docker/doodle.git
cd doodle/cheers2019 && docker build -t caruso33/cheers2019 .
docker run -it --rm caruso33/cheers2019           
docker login && docker push caruso33/cheers2019 


## Commands
### Testing run command
docker run -it hello-world   

#### Uses startup command 'bash'
docker run -it ubuntu bash

#### terminates immediately after command has finished
docker run busybox echo lululu

#### runs until it is terminated
docker run busybox    

docker ps (-all) # busybox inspectable, see container ids

docker run -it -v $(pwd):/app ruby:2.3 sh # run ruby image with shell start command
                                          # and set up volume with current working directory


## Theory
docker run = docker create + docker start
setting up snapshot + starting that snapshot

docker create hello-world # prints container id
docker start -a {container id} # a flag will output in terminal

docker run (default outputs to terminal)
docker start (default NOT outputting to terminal)

docker system prune # delete all cache and stopped containers
docker logs {container id} # inspect container

docker stop {id} # with SIGTERM
docker kill {id} # no SIGTERM

docker exec -it {id} {cmd} # it flag lets provide input to container
# starts second process attached to container, e.g.
docker exec -it caruso33/simpleweb sh # to start shell

## 
docker build . # make image out of Dockerfile
               # . is build context

docker build -t caruso33/redis:latest . # give name and version tag
docker run caruso33/redis(:latest) # latest default

docker build -f Dockerfile.dev # specific file


## 

docker run -it alpine sh; # make your own image
docker commit -c 'CMD ["redis-server"]' {id} # id of previous output


docker run -p 5000:8080 {id} # expose port to outside 5000


##

docker run -p 3000:3000 -v /app/node_modules -v $(pwd):/app {id}
# take folder in $pwd as reference, : is for mapping outside and inside container
# however, take the node_modules inside the container
# which is deleted in the src folder


docker attach {id} # attach current tty to docker instance stdin stdout stderr
docker exec -it {id} npm run test # for testing the create-react-app with terminal access

docker inspect {id} # return low level information of container

docker network create -d bridge (name of the network)